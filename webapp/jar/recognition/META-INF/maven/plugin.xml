<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.2 on 2015-10-25 -->

<plugin>
  <name>JavaCPP</name>
  <description>The missing bridge between Java and native C++</description>
  <groupId>org.bytedeco</groupId>
  <artifactId>javacpp</artifactId>
  <version>1.1</version>
  <goalPrefix>javacpp</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>build</goal>
      <description>A Maven Mojo to call the {@link Builder} (C++ header file -&gt; Java class -&gt; C++ JNI -&gt; native library).
Can also be considered as an example of how to use the Builder programmatically.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.bytedeco.javacpp.tools.BuildMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>classOrPackageName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Process only this class or package (suffixed with .* or .**)</description>
        </parameter>
        <parameter>
          <name>classOrPackageNames</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Process only these classes or packages (suffixed with .* or .**)</description>
        </parameter>
        <parameter>
          <name>classPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Load user classes from classPath</description>
        </parameter>
        <parameter>
          <name>classPaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Load user classes from classPaths</description>
        </parameter>
        <parameter>
          <name>compile</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Compile and delete the generated .cpp files</description>
        </parameter>
        <parameter>
          <name>compilerOptions</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Pass compilerOptions directly to compiler</description>
        </parameter>
        <parameter>
          <name>copyLibs</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Copy to output directory dependent libraries (link and preload)</description>
        </parameter>
        <parameter>
          <name>environmentVariables</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>Environment variables added to the compiler subprocess</description>
        </parameter>
        <parameter>
          <name>header</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Generate header file with declarations of callbacks functions</description>
        </parameter>
        <parameter>
          <name>includePath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.includepath&quot; property.</description>
        </parameter>
        <parameter>
          <name>includePaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.includepath&quot; property.</description>
        </parameter>
        <parameter>
          <name>jarPrefix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Also create a JAR file named {@code &lt;jarPrefix&gt;-&lt;platform&gt;.jar}</description>
        </parameter>
        <parameter>
          <name>linkPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.linkpath&quot; property.</description>
        </parameter>
        <parameter>
          <name>linkPaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.linkpath&quot; property.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Output all generated files to outputDirectory</description>
        </parameter>
        <parameter>
          <name>outputName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Output everything in a file named after given outputName</description>
        </parameter>
        <parameter>
          <name>preloadPath</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the path to the &quot;platform.preloadpath&quot; property.</description>
        </parameter>
        <parameter>
          <name>preloadPaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Add the paths to the &quot;platform.preloadpath&quot; property.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>properties</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Load all properties from resource</description>
        </parameter>
        <parameter>
          <name>propertyFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Load all properties from file</description>
        </parameter>
        <parameter>
          <name>propertyKeysAndValues</name>
          <type>java.util.Properties</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set property keys to values</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Skip the execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <classOrPackageName implementation="java.lang.String">${classOrPackageName}</classOrPackageName>
        <classOrPackageNames implementation="java.lang.String[]">${classOrPackageNames}</classOrPackageNames>
        <classPath implementation="java.lang.String" default-value="${project.build.outputDirectory}">${classPath}</classPath>
        <classPaths implementation="java.lang.String[]">${classPaths}</classPaths>
        <compile implementation="boolean" default-value="true">${compile}</compile>
        <compilerOptions implementation="java.lang.String[]">${compilerOptions}</compilerOptions>
        <copyLibs implementation="boolean" default-value="false">${copyLibs}</copyLibs>
        <environmentVariables implementation="java.util.Map">${environmentVariables}</environmentVariables>
        <header implementation="boolean" default-value="false">${header}</header>
        <includePath implementation="java.lang.String">${includePath}</includePath>
        <includePaths implementation="java.lang.String[]">${includePaths}</includePaths>
        <jarPrefix implementation="java.lang.String">${jarPrefix}</jarPrefix>
        <linkPath implementation="java.lang.String">${linkPath}</linkPath>
        <linkPaths implementation="java.lang.String[]">${linkPaths}</linkPaths>
        <outputDirectory implementation="java.io.File">${outputDirectory}</outputDirectory>
        <outputName implementation="java.lang.String">${outputName}</outputName>
        <preloadPath implementation="java.lang.String">${preloadPath}</preloadPath>
        <preloadPaths implementation="java.lang.String[]">${preloadPaths}</preloadPaths>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <properties implementation="java.lang.String">${properties}</properties>
        <propertyFile implementation="java.io.File">${propertyFile}</propertyFile>
        <propertyKeysAndValues implementation="java.util.Properties">${propertyKeysAndValues}</propertyKeysAndValues>
        <skip implementation="boolean" default-value="false">${skip}</skip>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>3.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>3.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>3.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <type>jar</type>
      <version>0.3.0</version>
    </dependency>
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>jsr250-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <type>jar</type>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.inject</artifactId>
      <type>jar</type>
      <version>0.3.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>1.5.5</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.5.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-profile</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact-manager</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>backport-util-concurrent</groupId>
      <artifactId>backport-util-concurrent</artifactId>
      <type>jar</type>
      <version>3.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-registry</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.11</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>1.5.15</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <type>jar</type>
      <version>1.0-alpha-9-stable-1</version>
    </dependency>
    <dependency>
      <groupId>classworlds</groupId>
      <artifactId>classworlds</artifactId>
      <type>jar</type>
      <version>1.1-alpha-2</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <type>jar</type>
      <version>4.12</version>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <type>jar</type>
      <version>1.7.12</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>jar</type>
      <version>1.7.12</version>
    </dependency>
  </dependencies>
</plugin>